{"version":3,"sources":["articlecreator/EditPanel.tsx","articlecreator/TextType.tsx","articlecreator/GalleryType.tsx","articlecreator/preview/Gallery.tsx","articlecreator/preview/ContentText.tsx","articlecreator/preview/index.tsx","articlecreator/index.tsx","App.tsx","index.tsx"],"names":["StyledPanel","styled","div","TypeName","EditPanel","id","typename","onTrashClick","DnD","text","style","font","color","fontSize","letterSpacing","lineHeight","src","process","position","left","onDragStart","ev","draggable","icon","onClick","StyledTexttype","CreditType","TextType","dispatch","content","type","boxId","toString","onDragOver","onDragLeave","onDrop","label","height","marginBottom","value","onChange","box","name","StyledGalleryType","ImagesBox","DropZoneCfg","DroppedImageContainer","props","fullWidth","DroppedImage","img","PositionChanger","DeleteImage","React","memo","map","c","positionKey","key","onFileDrop","image","width","length","thumbnail","backgroundColor","StyledGallery","Image","Blank","Gallery","maxWidth","ContentText","TextStyles","alignSelf","textAlign","StyledArticle","CoverImage","Autor","DateAndSharePanel","ArticlePreview","title","description","coverImage","articleContent","onBackClick","marginRight","size","marginLeft","initialState","StyledArticleCreator","StyledButtonsPanel","StyledMain","articleReducer","state","action","onChangeTitle","onChangeDescription","desc","onDropCoverImage","data","newState","find","onChangeText","contentObject","onChangeCredit","contentType","Math","max","o","Qoute","Text","Credit","addContent","onDropGalleryImage","filter","onDeleteContentBox","onDeleteImageFromBox","abs","onSwapImagePosition","pop","onImageToFullWidthGallery","targetId","selectedId","targetIndex","findIndex","selecteIndex","swapAfterDrop","boxes","buttonEvents","buttonText","ArticleCreator","useReducer","articleState","useState","preview","setPreview","dataTransfer","setData","preventDefault","stopPropagation","currentTarget","boxShadow","dropEffect","target","parseInt","selected","getData","TypeCompoenent","GalleryType","event","alert","GlobalStyle","createGlobalStyle","defaultBodyCss","StyledPageContainer","App","theme","DefaultThemeOnestino","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42b67b19.chunk.js","sourcesContent":["import React, { StatelessComponent } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { IconButton, Text } from '@m2stack/ui.onestino';\r\n\r\nconst StyledPanel = styled.div`\r\n    margin-bottom: 7px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position:relative;\r\n`;\r\n\r\nconst TypeName = styled.div``;\r\n\r\ninterface Props {\r\n    id: number;\r\n    typename: string;\r\n    onTrashClick: () => void;\r\n    DnD: any;\r\n}\r\n\r\nconst EditPanel: StatelessComponent<Props> = ({ id, typename, onTrashClick, DnD }) => {\r\n\r\n    const onDragStart = (ev) => {\r\n        DnD.onDragStart(ev, id);\r\n    }\r\n\r\n    return (\r\n        <StyledPanel>\r\n            <TypeName>\r\n                <Text\r\n                    text={typename}\r\n                    style={{\r\n                        font: \"medium\",\r\n                        color: \"tag\",\r\n                        fontSize: \"16px\",\r\n                        letterSpacing: \"1px\",\r\n                        lineHeight: \"20px\",\r\n                    }}\r\n                />\r\n            </TypeName>\r\n            <img\r\n                src={`${process.env.PUBLIC_URL}/drag.png`}\r\n                style={{ position: \"absolute\", left: \"48.5%\" }}\r\n                onDragStart={onDragStart}\r\n                draggable={true}\r\n            />\r\n            <IconButton icon=\"Trash\" onClick={onTrashClick} />\r\n        </StyledPanel>\r\n    );\r\n};\r\n\r\nexport default EditPanel;","import React, { StatelessComponent } from 'react';\r\nimport styled from 'styled-components';\r\nimport EditPanel from './EditPanel';\r\nimport { Textarea, Input } from '@m2stack/ui.onestino';\r\nimport { Actions } from './';\r\n\r\ninterface Props {\r\n    id: number;\r\n    typename: string;\r\n    dispatch: React.Dispatch<Actions>;\r\n    DnD: any;\r\n    content: any;\r\n}\r\n\r\nconst StyledTexttype = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin-bottom:42px;\r\n`;\r\n\r\nconst CreditType = styled.div`\r\n    border: 1px solid #d1d3d6;\r\n    padding:20px;\r\n`;\r\n\r\nconst TextType: StatelessComponent<Props> = ({ id, typename, dispatch, content, DnD }) => {\r\n    return (\r\n        <StyledTexttype>\r\n            <EditPanel\r\n                id={id}\r\n                typename={typename}\r\n                onTrashClick={() => dispatch({ type: \"onDeleteContentBox\", boxId: id })}\r\n                DnD={DnD}\r\n            />\r\n            <div\r\n                id={id.toString()}\r\n                onDragOver={DnD.onDragOver}\r\n                onDragLeave={DnD.onDragLeave}\r\n                onDrop={DnD.onDrop}\r\n            >\r\n                {\r\n                    typename === \"Credit\" ? (\r\n                        <CreditType>\r\n                            <Input\r\n                                label=\"Type of credit\"\r\n                                style={{ height: \"41px\", marginBottom: \"18px\" }}\r\n                                value={content.type}\r\n                                onChange={(type) => dispatch({ type: \"onChangeCredit\", box: { id, type, name: null } })}\r\n                            />\r\n                            <Input\r\n                                label=\"Name\"\r\n                                style={{ height: \"41px\" }}\r\n                                value={content.name}\r\n                                onChange={(name) => dispatch({ type: \"onChangeCredit\", box: { id, name, type: null } })}\r\n                            />\r\n                        </CreditType>\r\n                    ) : (\r\n                            <Textarea\r\n                                style={{ height: \"108px\" }}\r\n                                value={content}\r\n                                onChange={(text) => dispatch({ type: \"onChangeText\", box: { id, text } })}\r\n                            />\r\n                        )\r\n                }\r\n            </div>\r\n        </StyledTexttype>\r\n    );\r\n};\r\n\r\nexport default TextType;\r\n","import React, { StatelessComponent } from 'react';\r\nimport styled from 'styled-components';\r\nimport EditPanel from './EditPanel';\r\nimport { Actions } from './';\r\n\r\nimport { Dropzone, IconButton } from '@m2stack/ui.onestino';\r\n\r\ninterface Props {\r\n    id: number;\r\n    typename: string;\r\n    dispatch: React.Dispatch<Actions>;\r\n    content: any[];\r\n    DnD: any;\r\n}\r\n\r\nconst StyledGalleryType = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin-bottom:42px;\r\n`;\r\n\r\nconst ImagesBox = styled.div`\r\n    border: 1px solid #d1d3d6;\r\n    padding:20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst DropZoneCfg = {\r\n    text: \"Upload your  image\",\r\n    width: 227,\r\n    height: 298,\r\n}\r\n\r\nconst DroppedImageContainer = styled.div<{ fullWidth: boolean }>`\r\n    position:relative;\r\n    max-width:${props => props.fullWidth ? \"100%\" : \"calc( 50% - 10px)\"};\r\n    max-height: ${props => props.fullWidth ? \"100%\" : \"310px\"};\r\n`;\r\n\r\nconst DroppedImage = styled.img`\r\n    width:100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n`;\r\n\r\nconst PositionChanger = styled.div`\r\n    position:absolute;\r\n    width:176px;\r\n    height:40px;\r\n    background-color: #ffffff;\r\n    padding:8px;\r\n    top:121px;\r\n    left: calc((100% - 192px)/2);\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    & > div {\r\n        height:40px;\r\n        background-color: #d1d3d6;\r\n        cursor:pointer;\r\n    }\r\n\r\n`;\r\n\r\nconst DeleteImage = styled.div`\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n`;\r\n\r\nconst GalleryType: StatelessComponent<Props> = ({ id, typename, dispatch, content, DnD }) => {\r\n    return (\r\n        <StyledGalleryType>\r\n            <EditPanel\r\n                id={id}\r\n                typename={typename}\r\n                onTrashClick={() => dispatch({ type: \"onDeleteContentBox\", boxId: id })}\r\n                DnD={DnD}\r\n            />\r\n            <ImagesBox\r\n                id={id.toString()}\r\n                onDragOver={DnD.onDragOver}\r\n                onDragLeave={DnD.onDragLeave}\r\n                onDrop={DnD.onDrop}\r\n            >\r\n                {\r\n                    content.map((c, positionKey) => {\r\n                        return c === null ? (\r\n                            <Dropzone\r\n                                key={positionKey}\r\n                                text={DropZoneCfg.text}\r\n                                onFileDrop={(image) => dispatch({ type: \"onDropGalleryImage\", box: { image, id, position: positionKey } })}\r\n                                width={DropZoneCfg.width}\r\n                                height={DropZoneCfg.height}\r\n                            />\r\n                        ) : (\r\n                                <DroppedImageContainer fullWidth={content.length === 1} >\r\n                                    <DroppedImage src={c.thumbnail} draggable={false} />\r\n                                    <DeleteImage>\r\n                                        <IconButton\r\n                                            icon=\"Close\"\r\n                                            onClick={() => dispatch({\r\n                                                type: \"onDeleteImageFromBox\",\r\n                                                box: { id, position: positionKey },\r\n                                            })}\r\n                                        />\r\n                                    </DeleteImage>\r\n                                    <PositionChanger>\r\n                                        <div\r\n                                            onClick={() => dispatch({ type: \"onSwapImagePosition\", box: { id, position: 0 } })}\r\n                                            style={{\r\n                                                width: \"40px\",\r\n                                                backgroundColor: 0 === positionKey && 1 !== content.length && \"#86ea58\",\r\n                                            }}\r\n                                        />\r\n                                        <div\r\n                                            onClick={() => dispatch({ type: \"onSwapImagePosition\", box: { id, position: 1 } })}\r\n                                            style={{\r\n                                                width: \"40px\",\r\n                                                backgroundColor: 1 === positionKey && 1 !== content.length && \"#86ea58\",\r\n                                            }}\r\n                                        />\r\n                                        <div\r\n                                            onClick={() => dispatch({ type: \"onImageToFullWidthGallery\", boxId: id })}\r\n                                            style={{\r\n                                                width: \"80px\",\r\n                                                backgroundColor: 1 === content.length && \"#86ea58\",\r\n                                            }}\r\n                                        />\r\n                                    </PositionChanger>\r\n                                </DroppedImageContainer>\r\n                            )\r\n                    })\r\n                }\r\n            </ImagesBox>\r\n        </StyledGalleryType>\r\n    );\r\n};\r\n\r\nexport default React.memo(GalleryType);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledGallery = styled.div`\r\n    width:100%;\r\n    justify-content: space-between;\r\n    display: flex;\r\n    margin-bottom:64px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    object-fit: cover;\r\n    height: 100%;\r\n`;\r\n\r\nconst Blank = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nconst Gallery = ({ content }) => {\r\n    return (\r\n        <StyledGallery>\r\n            {\r\n                content.length === 2 ? (\r\n                    content.map((image) => {\r\n                        return image !== null ? <Image src={image.thumbnail} style={{ width: \"460px\" }} /> : <Blank />\r\n                    })\r\n                ) : (\r\n                        <Image src={content[0].thumbnail} style={{ maxWidth: \"100%\" }} />\r\n                    )\r\n            }\r\n        </StyledGallery>\r\n    );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport { Text } from '@m2stack/ui.onestino';\r\n\r\nconst ContentText = ({ type, content }) => {\r\n\r\n    const TextStyles = {\r\n        \"Text\": { font: \"medium\", fontSize: \"20px\", lineHeight: \"28px\", marginBottom: \"64px\", maxWidth: \"727px\" },\r\n        \"Credit\": { font: \"medium\", fontSize: \"20px\", lineHeight: \"28px\", marginBottom: \"64px\", maxWidth: \"727px\" , alignSelf:\"flex-start\" },\r\n        \"Qoute\": { font: \"semi\", fontSize: \"24px\", lineHeight: \"32px\", letterSpacing: \"0.5px\", marginBottom: \"64px\", maxWidth: \"727px\", textAlign: \"center\" },\r\n    }\r\n\r\n\r\n\r\n    return type == \"Credit\" ? <Text text={`${content.type}:${content.name}`} style={TextStyles[type]} /> : <Text text={content} style={TextStyles[type]} />\r\n};\r\n\r\nexport default ContentText;","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\nimport { Text, Link, Label, DateTime } from '@m2stack/ui.onestino';\r\nimport Gallery from './Gallery';\r\nimport ContentText from './ContentText';\r\n\r\n\r\nconst StyledArticle = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 940px;\r\n    width: 100%;\r\n    align-items: center;\r\n    align-self: center;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    margin-top:112px;\r\n    width: 100%;\r\n    height: 500px;\r\n    object-fit: cover;\r\n    margin-bottom:64px;\r\n`;\r\n\r\nconst Autor = styled.div`\r\n    margin-bottom:12px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst DateAndSharePanel = styled.div`\r\n    margin-top:45px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ArticlePreview = ({ title, description, coverImage, articleContent, onBackClick }) => {\r\n\r\n    const renderContent = () => {\r\n        return articleContent.map((content, key) => {\r\n            return content.type === \"Gallery\" ? (\r\n                <Gallery key={key} {...content} />\r\n            ) : (\r\n                    <ContentText key={key} {...content} />\r\n                );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <StyledArticle>\r\n            <Autor>\r\n                <Text text=\"Jessica Ferguson\" style={{ fontSize: \"16px\", lineHeight: \"20px\", font: \"medium\", marginRight: \"27px\", color: \"tag\" }} />\r\n                <Label value=\"Curator\" type=\"green\" size=\"small\" />\r\n            </Autor>\r\n            <Text text={title} style={{ fontSize: \"32px\", lineHeight: \"40px\", textAlign: \"center\", marginBottom: \"25px\", maxWidth: \"727px\" }} />\r\n            <Text text={description} style={{ fontSize: \"16px\", lineHeight: \"20px\", font: \"medium\", color: \"tag\", textAlign: \"center\", maxWidth: \"727px\" }} />\r\n            <DateAndSharePanel>\r\n                <DateTime style={{ color: \"text\", fontSize: \"18px\", marginRight: \"32px\" }} />\r\n                <Label value=\"Contributors\" type=\"grey\" />\r\n                <Text text=\"Share: FB, TW\" style={{ fontSize: \"18px\", lineHeight: \"22px\", font: \"medium\", marginLeft: \"32px\" }} />\r\n            </DateAndSharePanel>\r\n            <CoverImage src={coverImage.thumbnail} />\r\n            {\r\n                renderContent()\r\n            }\r\n            <Link value=\"Back\" onClick={onBackClick} />\r\n        </StyledArticle>\r\n    );\r\n};\r\n\r\nexport default ArticlePreview;","import React, { useState, useReducer } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport TextType from './TextType';\r\nimport GalleryType from './GalleryType';\r\nimport ArticlePreview from './preview';\r\nimport { Input, Button, Textarea, Dropzone, Link } from '@m2stack/ui.onestino';\r\n\r\ntype ContentTypes = \"Text\" | \"Gallery\" | \"Qoute\" | \"Credit\";\r\n\r\n\r\ninterface ContentType {\r\n    id: number;\r\n    type: ContentTypes;\r\n    content: any;\r\n}\r\n\r\ninterface State {\r\n    title: string;\r\n    description: string;\r\n    coverImage: any;\r\n    articleContent: ContentType[];\r\n}\r\n\r\nexport type Actions = (\r\n    { type: \"onChangeTitle\", title: string } |\r\n    { type: \"onChangeDescription\", desc: string } |\r\n    { type: \"onDropCoverImage\", image: any } |\r\n    { type: \"onChangeText\", box: { id: number, text: number } } |\r\n    { type: \"onChangeCredit\", box: { id: number, name: string, type: Omit<ContentTypes, 'Gallery'> } } |\r\n    { type: \"addContent\", box: ContentTypes } |\r\n    { type: \"onDropGalleryImage\", box: { image: any, id: number, position: number } } |\r\n    { type: \"onDeleteContentBox\", boxId: number } |\r\n    { type: \"onDeleteImageFromBox\", box: { id: number, position: number } } |\r\n    { type: \"onSwapImagePosition\", box: { id: number, position: number } } |\r\n    { type: \"onImageToFullWidthGallery\", boxId: number } |\r\n    { type: \"swapAfterDrop\", boxes: { targetId: number, selectedId: number } }\r\n);\r\n\r\nconst initialState: State = {\r\n    title: \"\",\r\n    description: \"\",\r\n    coverImage: null,\r\n    articleContent: [],\r\n};\r\n\r\nconst StyledArticleCreator = styled.div`\r\n    max-width:513px;\r\n    align-self: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`;\r\n\r\nconst StyledButtonsPanel = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top:\"40px\"px;\r\n    margin-bottom:56px;\r\n`;\r\n\r\nconst StyledMain = styled.div`\r\n    margin-bottom:42px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    height: 272px;\r\n`;\r\n\r\nfunction articleReducer(state: State, action: Actions): State {\r\n    switch (action.type) {\r\n        case 'onChangeTitle':\r\n            return onChangeTitle(state, action.title);\r\n        case 'onChangeDescription':\r\n            return onChangeDescription(state, action.desc);\r\n        case 'onDropCoverImage':\r\n            return onDropCoverImage(state, action.image);\r\n        case 'onChangeText':\r\n            return onChangeText(state, action.box);\r\n        case 'onChangeCredit':\r\n            return onChangeCredit(state, action.box);\r\n        case 'addContent':\r\n            return addContent(state, action.box);\r\n        case 'onDropGalleryImage':\r\n            return onDropGalleryImage(state, action.box);\r\n        case 'onDeleteContentBox':\r\n            return onDeleteContentBox(state, action.boxId);\r\n        case 'onDeleteImageFromBox':\r\n            return onDeleteImageFromBox(state, action.box);\r\n        case 'onSwapImagePosition':\r\n            return onSwapImagePosition(state, action.box);\r\n        case 'onImageToFullWidthGallery':\r\n            return onImageToFullWidthGallery(state, action.boxId);\r\n        case 'swapAfterDrop':\r\n            return swapAfterDrop(state, action.boxes);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Return max content ID from articleContent array\r\nfunction findMaxContentId(content) {\r\n    return Math.max(...content.map(o => o.id), 0);\r\n}\r\n\r\nfunction swapAfterDrop(state: State, data: any): State {\r\n    const { targetId, selectedId } = data;\r\n    const articleContent = [...state.articleContent];\r\n\r\n    const targetIndex = articleContent.findIndex((c => c.id === targetId));\r\n    const selecteIndex = articleContent.findIndex((c => c.id === selectedId));\r\n\r\n    [articleContent[targetIndex], articleContent[selecteIndex]] = [articleContent[selecteIndex], articleContent[targetIndex]];\r\n\r\n    return {\r\n        ...state,\r\n        articleContent,\r\n    };\r\n\r\n}\r\n\r\nfunction onImageToFullWidthGallery(state: State, boxId: any): State {\r\n    const articleContent = [...state.articleContent];\r\n    const contentObject = articleContent.find((c => c.id === boxId));\r\n\r\n    const image = contentObject.content.find(c => c != null);\r\n    contentObject.content[0] = image;\r\n    contentObject.content.pop();\r\n\r\n    return {\r\n        ...state,\r\n        articleContent,\r\n    };\r\n}\r\n\r\n// Swap image in box after click on small  square icon\r\nfunction onSwapImagePosition(state: State, data: any): State {\r\n    const { id, position } = data;\r\n    const articleContent = [...state.articleContent];\r\n\r\n    const contentObject = articleContent.find((c => c.id === id));\r\n\r\n    if (contentObject.content.length === 2) {\r\n        [contentObject.content[0], contentObject.content[1]] = [contentObject.content[1], contentObject.content[0]];\r\n    } else {\r\n        contentObject.content[position] = contentObject.content[0];\r\n        contentObject.content[Math.abs(position - 1)] = null;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        articleContent,\r\n    };\r\n}\r\n\r\n// Delete image from \"Gallery\" after clik on \"X\"\r\nfunction onDeleteImageFromBox(state: State, data: any): State {\r\n    const { id, position } = data;\r\n    const articleContent = [...state.articleContent];\r\n\r\n    const contentObject = articleContent.find((c => c.id === id));\r\n    contentObject.content[position] = null;\r\n\r\n    return {\r\n        ...state,\r\n        articleContent,\r\n    };\r\n}\r\n\r\n// Delete Gallery or Text, ... boxe after click on Trash icon\r\nfunction onDeleteContentBox(state: State, boxId: number): State {\r\n    return { ...state, articleContent: state.articleContent.filter((c) => c.id !== boxId) };\r\n}\r\n\r\nfunction onChangeTitle(state: State, title: string): State {\r\n    return { ...state, title };\r\n}\r\n\r\nfunction onChangeDescription(state: State, description: string): State {\r\n    return { ...state, description };\r\n}\r\n\r\nfunction onDropCoverImage(state: State, image: any): State {\r\n    return { ...state, coverImage: image };\r\n}\r\n\r\nfunction onChangeText(state: State, data: any): State {\r\n    const { id, text } = data;\r\n    const newState = { ...state };\r\n\r\n    const contentObject = newState.articleContent.find((c => c.id === id));\r\n    contentObject.content = text;\r\n\r\n    return newState;\r\n}\r\n\r\nfunction onChangeCredit(state: State, data: any): State {\r\n    const { id, type, name } = data;\r\n    const newState = { ...state };\r\n\r\n    const contentObject = newState.articleContent.find((c => c.id === id));\r\n\r\n    if (type === null) {\r\n        contentObject.content.name = name;\r\n    } else {\r\n        contentObject.content.type = type;\r\n    }\r\n\r\n    return newState;\r\n}\r\n\r\n\r\nfunction onDropGalleryImage(state: State, data: any): State {\r\n\r\n    const { id, image, position } = data;\r\n    const newState = { ...state };\r\n\r\n    const contentObject = newState.articleContent.find((c => c.id === id));\r\n\r\n    contentObject.content[position] = image;\r\n\r\n    return newState;\r\n}\r\n\r\nfunction addContent(state: State, type: ContentTypes): State {\r\n    const newState = { ...state };\r\n\r\n    const contentFormat = {\r\n        Gallery: [null, null],\r\n        Qoute: \"\",\r\n        Text: \"\",\r\n        Credit: { type: \"\", name: \"\" },\r\n    };\r\n\r\n    const contentType: ContentType = {\r\n        id: findMaxContentId(newState.articleContent) + 1,\r\n        type,\r\n        content: contentFormat[type],\r\n    };\r\n\r\n    return { ...state, articleContent: [...state.articleContent, contentType] };\r\n}\r\n\r\nconst buttonEvents: Array<{ buttonText: string; contentType: ContentTypes }> = [\r\n    {\r\n        buttonText: \"Add image\",\r\n        contentType: \"Gallery\",\r\n    },\r\n    {\r\n        buttonText: \"Add text\",\r\n        contentType: \"Text\",\r\n    },\r\n    {\r\n        buttonText: \"Add qoute\",\r\n        contentType: \"Qoute\",\r\n    },\r\n    {\r\n        buttonText: \"Add credit\",\r\n        contentType: \"Credit\",\r\n    }\r\n];\r\n\r\nconst ArticleCreator = () => {\r\n\r\n    const [articleState, dispatch] = useReducer(articleReducer, initialState);\r\n    const [preview, setPreview] = useState(false);\r\n\r\n    const shwowPreview = () => {\r\n        return articleState.coverImage ? setPreview(true) : alert(\"Please add cover image\");\r\n    };\r\n\r\n    // --------------------------------------------------------------------\r\n    // ------------------------ Drag and Drop -----------------------------\r\n    // --------------------------------------------------------------------\r\n\r\n    const onDragStart = (ev, id) => {\r\n        ev.dataTransfer.setData(\"text\", id);\r\n    };\r\n\r\n    const onDragOver = (ev) => {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        ev.currentTarget.style.boxShadow = \"#000000 0px 0px 10px 3px\";\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    };\r\n\r\n    const onDragLeave = ev => {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        ev.currentTarget.style.boxShadow = \"\";\r\n        ev.dataTransfer.dropEffect = \"move\";\r\n    };\r\n\r\n    const onDrop = (ev) => {\r\n\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n\r\n        ev.currentTarget.style.boxShadow = \"\";\r\n\r\n        const target = parseInt(ev.currentTarget.id, 10);\r\n        const selected = parseInt(ev.dataTransfer.getData(\"text\"), 10);\r\n\r\n        dispatch({ type: 'swapAfterDrop', boxes: { targetId: target, selectedId: selected } });\r\n    };\r\n\r\n    const DnD = {\r\n        onDragStart,\r\n        onDragOver,\r\n        onDragLeave,\r\n        onDrop,\r\n    };\r\n\r\n    const renderContentTypeBoxes = () => {\r\n        return articleState.articleContent.map((content) => {\r\n\r\n            const TypeCompoenent = content.type === \"Gallery\" ? GalleryType : TextType;\r\n\r\n            return (\r\n                <TypeCompoenent\r\n                    id={content.id}\r\n                    typename={content.type}\r\n                    content={content.content}\r\n                    dispatch={dispatch}\r\n                    DnD={DnD}\r\n                />\r\n            );\r\n\r\n        });\r\n    };\r\n\r\n    return preview ? (\r\n        <ArticlePreview {...articleState} onBackClick={() => setPreview(false)} />\r\n    ) : (\r\n            <StyledArticleCreator>\r\n                <StyledMain>\r\n                    <Button\r\n                        value=\"Publish story\"\r\n                        style={{ marginBottom: \"40px\", width: \"200px\", alignSelf: \"center\" }}\r\n                        type=\"actionSmall\"\r\n                    />\r\n                    <Input\r\n                        type=\"text\"\r\n                        label=\"Story title\"\r\n                        style={{ marginBottom: \"40px\" }}\r\n                        value={articleState.title}\r\n                        onChange={(title) => dispatch({ type: \"onChangeTitle\", title })}\r\n                    />\r\n                    <Textarea\r\n                        label=\"Story short description\"\r\n                        style={{ marginBottom: \"40px\", height: \"108px\" }}\r\n                        value={articleState.description}\r\n                        onChange={(description) => dispatch({ type: \"onChangeDescription\", desc: description })}\r\n                    />\r\n\r\n                    {\r\n                        articleState.coverImage === null ? (\r\n                            <Dropzone\r\n                                text=\"Upload your cover image\"\r\n                                onFileDrop={(image) => dispatch({ type: \"onDropCoverImage\", image })}\r\n                                height={273}\r\n                            />\r\n                        ) : (\r\n                                <CoverImage src={articleState.coverImage.thumbnail} />\r\n                            )\r\n                    }\r\n\r\n                </StyledMain>\r\n\r\n                {\r\n                    renderContentTypeBoxes()\r\n                }\r\n\r\n                <StyledButtonsPanel>\r\n                    {\r\n                        buttonEvents.map((event, key) =>\r\n                            <Button\r\n                                key={key}\r\n                                value={event.buttonText}\r\n                                type=\"small\"\r\n                                onClick={() => dispatch({ type: \"addContent\", box: event.contentType })}\r\n                            />\r\n                        )\r\n                    }\r\n                </StyledButtonsPanel>\r\n\r\n                <Button\r\n                    value=\"Publish story\"\r\n                    style={{ marginBottom: \"40px\", width: \"200px\", alignSelf: \"center\" }}\r\n                    type=\"actionSmall\"\r\n                />\r\n\r\n                <Link value=\"Preview\" onClick={shwowPreview} style={{ alignSelf: \"center\" }} />\r\n\r\n            </StyledArticleCreator>\r\n        );\r\n};\r\n\r\nexport default ArticleCreator;","import React from 'react';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\n\nimport { DefaultThemeOnestino, defaultBodyCss } from '@m2stack/ui.onestino';\n\nimport Creator from './articlecreator';\n\nconst Bold = './../public/fonts/HKGrotesk-Bold.otf';\nconst Medium = './../public/fonts/HKGrotesk-Medium.otf';\nconst Semi = './../public/fonts/HKGrotesk-SemiBold.otf';\n\nconst GlobalStyle = createGlobalStyle`\n  ${defaultBodyCss(Bold, Medium, Semi)}\n`\n\n\nconst StyledPageContainer = styled.div`\n\n    width:100%;\n    position:relative;\n    text-rendering: optimizelegibility;\n    -webkit-font-smoothing: antialiased;\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n\n`;\n\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={DefaultThemeOnestino}>\n      <GlobalStyle />\n      <StyledPageContainer>\n        <Creator />\n      </StyledPageContainer>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}